name: 'Process Scheduled Announcement'

on:
  issues:
    types: [opened]

jobs:
  process-scheduled-announcement:
    runs-on: ubuntu-latest

    steps:
      - name: Extract Issue Information
        id: extract_info
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          ANNOUNCEMENT_CONTENT=$(echo "$ISSUE_BODY" | grep -oP '(?<=### Announcement Content)(.*?)(?=### Scheduled Date and Time)' | xargs)
          SCHEDULE_DATE=$(echo "$ISSUE_BODY" | grep -oP '(?<=- \*\*Date\*\*: )(.*)' | xargs)
          SCHEDULE_TIME=$(echo "$ISSUE_BODY" | grep -oP '(?<=- \*\*Time\*\*: )(.*)' | xargs)
          
          # Combine the date and time
          SCHEDULED_DATETIME="${SCHEDULE_DATE} ${SCHEDULE_TIME}"

          echo "ISSUE_TITLE=$ISSUE_TITLE" >> $GITHUB_ENV
          echo "ANNOUNCEMENT_CONTENT=$ANNOUNCEMENT_CONTENT" >> $GITHUB_ENV
          echo "SCHEDULED_DATETIME=$SCHEDULED_DATETIME" >> $GITHUB_ENV

      - name: Validate and Convert Date to Cron Expression
        id: convert_to_cron
        run: |
          # Check if the scheduled datetime is valid, else use current time
          if ! date -d "${{ env.SCHEDULED_DATETIME }}" >/dev/null 2>&1; then
            echo "Invalid date format detected. Defaulting to current time."
            SCHEDULED_DATETIME=$(date '+%Y-%m-%d %H:%M')
          fi
          
          # Convert the valid or fallback date to cron expression
          CRON_EXPRESSION=$(date -d "$SCHEDULED_DATETIME" '+%M %H %d %m *')
          echo "CRON_EXPRESSION=$CRON_EXPRESSION" >> $GITHUB_ENV
          echo "SCHEDULED_DATETIME=$SCHEDULED_DATETIME" >> $GITHUB_ENV

      - name: Schedule Workflow
        run: |
          echo "Scheduling announcement for $SCHEDULED_DATETIME using cron expression: $CRON_EXPRESSION"

      - name: Send Discord Announcement
        uses: C-Spire-Gaming/discord-announcements-embed@main
        with:
          webhook-url: ${{ secrets.CI_DISCORD_WEBHOOK }}  # Webhook stored in secrets for security
          msg-content: ${{ env.ISSUE_TITLE }}  # Use the extracted issue title for message content
          ignore-hidden: 'false'  # Set ignore-hidden to false explicitly