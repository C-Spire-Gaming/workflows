name: 'Process Scheduled Announcement'

on:
  issues:
    types: [opened]

jobs:
  process-announcement:
    runs-on: ubuntu-latest

    steps:
      - name: Extract Issue Information
        id: extract_info
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"
          ANNOUNCEMENT_CONTENT=$(echo "$ISSUE_BODY" | grep -oP '(?<=### Announcement Content\s)(.*?)(?=\n###)' | xargs)
          SCHEDULE_DATE=$(echo "$ISSUE_BODY" | grep -oP '(?<=- \*\*Date\*\*: )(.*)' | xargs)
          SCHEDULE_TIME=$(echo "$ISSUE_BODY" | grep -oP '(?<=- \*\*Time\*\*: )(.*)' | xargs)
          ADDITIONAL_INFO=$(echo "$ISSUE_BODY" | grep -oP '(?<=### Additional Information\s)(.*?)(?=\n|$)' | xargs)

          # Combine date and time
          SCHEDULED_DATETIME="${SCHEDULE_DATE} ${SCHEDULE_TIME}"

          echo "ANNOUNCEMENT_CONTENT=$ANNOUNCEMENT_CONTENT" >> $GITHUB_ENV
          echo "ADDITIONAL_INFO=$ADDITIONAL_INFO" >> $GITHUB_ENV
          echo "SCHEDULED_DATETIME=$SCHEDULED_DATETIME" >> $GITHUB_ENV

      - name: Validate Date and Time
        id: validate_date
        run: |
          if ! date -d "$SCHEDULED_DATETIME" >/dev/null 2>&1; then
            echo "Invalid date/time format, defaulting to current time."
            SCHEDULED_DATETIME=$(date '+%Y-%m-%d %H:%M')
          fi
          echo "SCHEDULED_DATETIME=$SCHEDULED_DATETIME" >> $GITHUB_ENV

      - name: Schedule and Send Discord Announcement
        uses: C-Spire-Gaming/discord-announcements-embed@main
        with:
          webhook-url: ${{ secrets.CI_DISCORD_WEBHOOK }}
          msg-content: ${{ env.ANNOUNCEMENT_CONTENT }}
          scheduled-time: ${{ env.SCHEDULED_DATETIME }}